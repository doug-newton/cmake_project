#!/bin/bash

BLACK='\033[0;30m'     
DARK_GRAY='\033[1;30m'
RED='\033[0;31m'     
LIGHT_RED='\033[1;31m'
GREEN='\033[0;32m'     
LIGHT_GREEN='\033[1;32m'
BROWN='\033[0;33m'     
YELLOW='\033[1;33m'
BLUE='\033[0;34m'     
LIGHT_BLUE='\033[1;34m'
PURPLE='\033[0;35m'     
LIGHT_PURPLE='\033[1;35m'
CYAN='\033[0;36m'     
LIGHT_CYAN='\033[1;36m'
LIGHT_GRAY='\033[0;37m'     
WHITE='\033[1;37m'
NONE='\033[0m' # no color

confirm() {
    # call with a prompt string or use a default
    read -r -p "${1:-Are you sure?} [y/N] " response
    case "$response" in
        [yY][eE][sS]|[yY]) 
            true
            ;;
        *)
            false
            ;;
    esac
}

if [ $# -lt 1 ]; then
	#	printf "${RED}$(cowsay -f head-in Error: No project name supplied)${NONE}\n"
	printf "${RED}Error: No project name supplied${NONE}\n"
	exit 1
else
	printf "Creating C++ CMake project ${YELLOW}\"$1\"${NONE}...\n"

	if [ -e "$1" ]; then
		if [ -d "$1" ]; then
			#	printf "${RED}$(cowsay -f head-in Error: \"$1\" already exists)${NONE}\n"
			printf "${BLUE}\"$1\" directory already exists:\n"
			tree $1 -aI ".git|html|latex"
			confirm "Continue to make project using this name and directory?" && \
				printf "Using $1 for cmake project...\n" || \
				printf "${YELLOW}cpp_project aborted\n${NONE}\n" && \
				exit 1
		else
			printf "${RED}$1 exists as a non-directory.\n"
			printf "${YELLOW}cpp_project aborted\n${NONE}\n"
		fi
	fi

	# this assumes the use of `scripty` to manage the script
	# please see https://www.github.com/doug-newton/scripty

	PROJECT_FILES=~/bin/git/cmake_project/project_files

	cp -r $PROJECT_FILES $1 \
		&& cd $1 \
		&& cat doxygen/Doxyfile | sed "s/CMAKE_PROJECT_NAME/$1/g" > _doxy \
		&& mv _doxy doxygen/Doxyfile \
		&& cat CMakeLists.txt | sed "s/CMAKE_PROJECT_NAME/$1/g" > _cmake_lists \
		&& mv _cmake_lists CMakeLists.txt \
		&& cat Makefile | sed "s/CMAKE_PROJECT_NAME/$1/g" > _Makefile \
		&& mv _Makefile Makefile \
		&& cat .vimrc | sed "s/CMAKE_PROJECT_NAME/$1/g" > _vimrc \
		&& mv _vimrc .vimrc
		# -------------------------------------

	rm -rf .git
	make clean
	git init > /dev/null
	git add .
	git commit -m "Initial commit" > /dev/null
	git log --oneline
	#	printf "\n${BLUE}$(tree .)\n${NONE}\n"

	printf "C++ project ${YELLOW}\"$1\"${NONE} created successfully!\n"
	printf "${GREEN}$(cowthink -f tux Happy Coding!)\n\n${NONE}"
fi

